Index: b/mpn/powerpc64/elf.m4
===================================================================
--- a/mpn/powerpc64/elf.m4
+++ b/mpn/powerpc64/elf.m4
@@ -18,7 +18,11 @@
 dnl  You should have received a copy of the GNU Lesser General Public License
 dnl  along with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.
 
-define(`ASM_START',`')
+define(`ASM_START',
+`ifdef(`ELFv2_ABI',
+`
+	.abiversion 2
+')')
 
 dnl  Called: PROLOGUE_cpu(GSYM_PREFIX`'foo)
 dnl          EPILOGUE_cpu(GSYM_PREFIX`'foo)
@@ -26,7 +30,17 @@
 
 define(`PROLOGUE_cpu',
 m4_assert_numargs(1)
-	`
+`ifdef(`ELFv2_ABI',
+`
+	.globl	$1
+	.type	$1, @function
+	.section	".text"
+	.align	5
+$1:
+0:	addis	2, 12, (.TOC.-0b)@ha
+	addi	2, 2, (.TOC.-0b)@l
+	.localentry $1, .-$1
+',`
 	.globl	$1
 	.globl	.$1
 	.section	".opd","aw"
@@ -37,11 +51,16 @@
 	.type	.$1, @function
 	.section	".text"
 	.align	5
-.$1:')
+.$1:
+')')
 
 define(`EPILOGUE_cpu',
 m4_assert_numargs(1)
-`	.size	.$1, .-.$1')
+`ifdef(`ELFv2_ABI',`
+	.size	$1, .-$1
+',`
+	.size	.$1, .-.$1
+')')
 
 define(`TOC_ENTRY', `')
 
Index: b/configure
===================================================================
--- a/configure
+++ b/configure
@@ -28473,6 +28473,23 @@
 
 echo "include_mpn(\`powerpc32/powerpc-defs.m4')" >> $gmp_tmpconfigm4i
 
+
+      # Check for Linux ELFv2 ABI
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#if _CALL_ELF == 2
+yes
+#endif
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "yes" >/dev/null 2>&1; then :
+
+echo "define(<ELFv2_ABI>)" >> $gmp_tmpconfigm4
+
+fi
+rm -f conftest*
+
+
       case $host in
         *-*-aix*)
 	  case $ABI in
Index: b/configure.ac
===================================================================
--- a/configure.ac
+++ b/configure.ac
@@ -3399,6 +3399,14 @@
       GMP_ASM_POWERPC_PIC_ALWAYS
       GMP_ASM_POWERPC_R_REGISTERS
       GMP_INCLUDE_MPN(powerpc32/powerpc-defs.m4)
+
+      # Check for Linux ELFv2 ABI
+      AC_EGREP_CPP(yes,
+[#if _CALL_ELF == 2
+yes
+#endif],
+      [GMP_DEFINE_RAW(["define(<ELFv2_ABI>)"])])
+
       case $host in
         *-*-aix*)
 	  case $ABI in
